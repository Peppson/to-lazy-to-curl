<Window
    x:Class="to_lazy_to_curl.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
    xmlns:components="clr-namespace:to_lazy_to_curl.Components"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:to_lazy_to_curl"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="To Lazy to Curl"
    Width="620"
    Height="670"
    MinWidth="400"
    MinHeight="480"
    Background="{DynamicResource WindowBackground}"
    FontFamily="Consolas"
    Icon="pack://application:,,,/Assets/AppIcon.ico"
    mc:Ignorable="d">

    <Grid Margin="24,10,24,24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--  URL  -->
        <components:UrlInput x:Name="UrlInputControl" Grid.Row="0" />

        <!--  JSON  -->
        <components:JsonInput x:Name="JsonInputControl" Grid.Row="1" />

        <!--  Status Message  -->
        <TextBlock
            x:Name="MessageTextBlock"
            Grid.Row="3"
            Margin="0,10,0,-10"
            HorizontalAlignment="Center"
            FontSize="14"
            FontWeight="Bold"
            Text=""
            TextAlignment="Center" />

        <!--  HTTP Action Buttons  -->
        <StackPanel
            Grid.Row="4"
            MaxWidth="900"
            Orientation="Vertical">

            <TextBlock
                Margin="0,0,0,6"
                VerticalAlignment="Center"
                FontSize="{StaticResource FontSizeH1}"
                FontWeight="Bold"
                Foreground="{StaticResource PrimaryText}"
                Text="Actions" />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <components:HttpButton
                    Grid.Column="0"
                    ActionType="Get"
                    ButtonColor="{StaticResource GetButton}"
                    ButtonContent="GET" />

                <components:HttpButton
                    Grid.Column="2"
                    ActionType="Post"
                    ButtonColor="{StaticResource PostButton}"
                    ButtonContent="POST" />

                <components:HttpButton
                    Grid.Column="4"
                    ActionType="Patch"
                    ButtonColor="{StaticResource PatchButton}"
                    ButtonContent="PATCH" />

                <components:HttpButton
                    Grid.Column="6"
                    ActionType="Put"
                    ButtonColor="{StaticResource PutButton}"
                    ButtonContent="PUT" />

                <components:HttpButton
                    Grid.Column="8"
                    ActionType="Delete"
                    ButtonColor="{StaticResource DeleteButton}"
                    ButtonContent="DELETE" />
            </Grid>
        </StackPanel>

        <!--  Bottom Buttons  -->
        <Grid
            Grid.Row="5"
            MaxWidth="900"
            Margin="0,12,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="4" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button
                x:Name="SubmitButton"
                Grid.Column="0"
                Height="42"
                Click="SubmitButton_Click"
                Cursor="Hand"
                FontSize="{DynamicResource FontSizeBottomButtons}"
                FontWeight="Bold">
                <Grid>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Send" />
                    <fa:ImageAwesome
                        Width="17"
                        Height="17"
                        Margin="-64,0,0,2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource PrimaryText}"
                        Icon="PaperPlaneOutline"
                        Rotation="20" />
                </Grid>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="outer"
                            Background="{StaticResource ButtonBackground}"
                            BorderBrush="{StaticResource Border}"
                            BorderThickness="1"
                            CornerRadius="4">
                            <ContentPresenter
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                RecognizesAccessKey="True"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="outer" Property="BorderBrush" Value="{StaticResource BorderHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="outer" Property="Background" Value="{StaticResource BorderHover}" />
                                <Setter TargetName="outer" Property="BorderBrush" Value="{StaticResource BorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Button
                x:Name="ClearButton"
                Grid.Column="2"
                Height="42"
                Click="ClearButton_Click"
                Cursor="Hand"
                FontSize="{DynamicResource FontSizeBottomButtons}"
                FontWeight="Bold">
                <Grid>
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="Reset" />
                    <fa:ImageAwesome
                        Width="15"
                        Height="15"
                        Margin="-64,0,0,-1"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Foreground="{StaticResource PrimaryText}"
                        Icon="Refresh"
                        Rotation="0" />
                </Grid>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border
                            x:Name="outer"
                            Background="{StaticResource ButtonBackground}"
                            BorderBrush="{StaticResource Border}"
                            BorderThickness="1"
                            CornerRadius="4">
                            <ContentPresenter
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                RecognizesAccessKey="True"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="outer" Property="BorderBrush" Value="{StaticResource BorderHover}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="outer" Property="Background" Value="{StaticResource BorderHover}" />
                                <Setter TargetName="outer" Property="BorderBrush" Value="{StaticResource BorderHover}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
    </Grid>
</Window>
